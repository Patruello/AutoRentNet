// <auto-generated />
using System;
using AutoRentNet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoRentNet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250605090222_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("AutoRentNet.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 1, 17, 30, 0, 0, DateTimeKind.Utc),
                            CustomerEmail = "jan@example.com",
                            CustomerName = "Jan Kowalski",
                            EndDate = new DateTime(2025, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 3, 12, 0, 0, 0, DateTimeKind.Utc),
                            CustomerEmail = "anna@example.com",
                            CustomerName = "Anna Nowak",
                            EndDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        });
                });

            modelBuilder.Entity("AutoRentNet.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Consumption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Doors")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fuel")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<int>("Seats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Transmission")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Trunk")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Consumption = "6.5 L/100 km",
                            Description = "Sedan 2019",
                            Doors = 4,
                            Fuel = "Benzyna",
                            Image = "/img/fleet/bmw_3.png",
                            Name = "BMW Seria 3",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "480 L"
                        },
                        new
                        {
                            Id = 2,
                            Consumption = "8.5 L/100 km",
                            Description = "SUV 2020",
                            Doors = 5,
                            Fuel = "Benzyna",
                            Image = "/img/fleet/bmw_x5.jpg",
                            Name = "BMW X5",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "650 L"
                        },
                        new
                        {
                            Id = 3,
                            Consumption = "4.5 L/100 km",
                            Description = "Hatchback 2018",
                            Doors = 5,
                            Fuel = "Diesel",
                            Image = "/img/fleet/citroen_c3.png",
                            Name = "Citroen C3",
                            Seats = 5,
                            Transmission = "Manual",
                            Trunk = "300 L"
                        },
                        new
                        {
                            Id = 4,
                            Consumption = "5 L/100 km",
                            Description = "City Car 2019",
                            Doors = 3,
                            Fuel = "Benzyna",
                            Image = "/img/fleet/fiat_500.png",
                            Name = "Fiat 500",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "185 L"
                        },
                        new
                        {
                            Id = 5,
                            Consumption = "6 L/100 km",
                            Description = "SUV 2021",
                            Doors = 5,
                            Fuel = "Hybryda",
                            Image = "/img/fleet/honda_crv.jpg",
                            Name = "Honda CRV",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "550 L"
                        },
                        new
                        {
                            Id = 6,
                            Consumption = "4.8 L/100 km",
                            Description = "Hatchback 2022",
                            Doors = 5,
                            Fuel = "Diesel",
                            Image = "/img/fleet/seat_leon.png",
                            Name = "Seat Leon",
                            Seats = 5,
                            Transmission = "Manual",
                            Trunk = "380 L"
                        },
                        new
                        {
                            Id = 7,
                            Consumption = "5.2 L/100 km",
                            Description = "SUV 2022",
                            Doors = 4,
                            Fuel = "Diesel",
                            Image = "/img/fleet/skoda_superb.png",
                            Name = "Skoda Superb",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "6250 L"
                        },
                        new
                        {
                            Id = 8,
                            Consumption = "3.8 L/100 km",
                            Description = "Hatchback 2023",
                            Doors = 5,
                            Fuel = "Hybryda",
                            Image = "/img/fleet/toyota_yaris.png",
                            Name = "Toyota Yaris",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "286 L"
                        },
                        new
                        {
                            Id = 9,
                            Consumption = "4.1 L/100 km",
                            Description = "Crossover 2024",
                            Doors = 5,
                            Fuel = "Hybryda",
                            Image = "/img/fleet/toyota-c-hr.jpg",
                            Name = "Toyota C-HR",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "377 L"
                        },
                        new
                        {
                            Id = 10,
                            Consumption = "5.5 L/100 km",
                            Description = "Hatchback 2019",
                            Doors = 5,
                            Fuel = "Diesel",
                            Image = "/img/fleet/bmw_1.png",
                            Name = "BMW Seria 1",
                            Seats = 5,
                            Transmission = "Automat",
                            Trunk = "360 L"
                        });
                });

            modelBuilder.Entity("AutoRentNet.Models.Reservation", b =>
                {
                    b.HasOne("AutoRentNet.Models.Vehicle", "Vehicle")
                        .WithMany("Reservations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoRentNet.Models.Vehicle", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
